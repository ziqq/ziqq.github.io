'use strict';

function sectionAnimate() {
    animateHero();

    var i = new TimelineMax();
    i.set('.tab__content--amin .img-container__bg', {
        x: '-100%',
        opacity: 0
    }).set('.tab__content--amin .info-block__title', { x: 100, opacity: 0 }).set('.tab__content--amin .main__title', { opacity: 0, x: 180 }).set('.tab__content--amin .img-container__img', {
        x: '-120%',
        opacity: 0
    }).set('.tab__content--amin .info-block__item, .tab__content--amin .info-text, .tab__content--amin .tab-bot__btn', {
        x: 100,
        opacity: 0
    });

    if ($(window).height() >= 1024 && $(window).width() <= 1024) {
        amimateInfo(i);
    }

    var r = new TimelineMax();
    r.set('.result-photo__item', { y: 150, opacity: 0 }).set('.results-anim-block', { y: 50, opacity: 0 });

    var v = new TimelineMax();
    v.set('.video__title', { y: 200, opacity: 0 }).set('.bals__item', { y: 500, zIndex: 10 }).set('.bals__item--2', { x: -50 }).set('.video__desc', { y: 50, opacity: 0 }).set('.video__player', { scale: 1.2, opacity: 0 }).set('.video__play', { scale: 0, opacity: 0 }).set('.video__btn', { y: 100, opacity: 0 });

    var c = new TimelineMax();
    c.set('.counter-user', { y: 50, opacity: 0 }).set('.counter__desc', {
        y: 70,
        opacity: 0
    });

    var p = new TimelineMax();
    p.set('.price__title, .price__desc', { y: 30, opacity: 0 }).set('.price__item', {
        x: -150,
        opacity: 0,
        transition: 'initial'
    });

    window.onscroll = function () {
        var scroll = document.documentElement.scrollTop;
        var destination = 300;

        if ($('.info').offset().top - destination < scroll) {
            amimateInfo(i);
        }

        if ($('.results').offset().top - destination < scroll) {
            ainimateResults(r);
        }

        if ($('.video').offset().top - destination < scroll) {
            ainimateVideo(v);
        }

        if ($('.counter').offset().top - destination < scroll) {
            ainimateCounter(c);
        }

        if ($('.price').offset().top - destination < scroll) {
            ainimatePrice(p);
        }
    };
}

function animateHero() {
    var h = new TimelineMax();

    h.fromTo('.title__border', 0.3, { height: 0 }, { height: '45%' }, '1').fromTo('.title__text', 0.7, { x: -50, opacity: 0 }, { x: 0, opacity: 1 }).fromTo('.hero__desc', 0.5, { x: -100, opacity: 0 }, { x: 0, opacity: 1 }).fromTo('.hero__btn', 0.5, { x: -100, opacity: 0 }, { x: 0, opacity: 1 }, '-=.3').fromTo('.hero .info-text', 0.5, { x: -100, opacity: 0 }, { x: 0, opacity: 1 }, '-=.3').fromTo('.hero .img-container__bg', 0.6, { scale: 1.2, opacity: 0 }, { scale: 1, opacity: 1 }, '-=1.2').fromTo('.hero .box-icon-move__map', 0.6, { opacity: 0 }, { opacity: 1 }, '-=1').fromTo('.hero__slide', 0.6, { scale: 1.2, opacity: 0 }, { scale: 1, opacity: 1 }, '-=.7').fromTo('.hero__link', 0.5, { scale: 0, opacity: 0 }, { scale: 1, opacity: 1 }, '-=.4').fromTo('.box-icon-move__icon', 0.5, { scale: 0, opacity: 0 }, { scale: 1, opacity: 1 }, '-=.9');
}

function amimateInfo(i) {
    i.to('.tab__content--amin .img-container__bg', 0.8, {
        x: 0,
        xPercent: -51,
        opacity: 1
    }).to('.tab__content--amin .info-block__title', 0.8, { x: 0, opacity: 1 }, '-=.5').to('.tab__content--amin .img-container__img', 0.8, { x: 0, xPercent: -51, opacity: 1 }, '-= .2').staggerTo('.tab__content--amin .info-block__item', 0.9, { x: 0, opacity: 1 }, 0.4, '-=.8').to('.tab__content--amin .info-text', 0.8, { x: 0, opacity: 1 }, '-= .3').to('.tab__content--amin .info-text, .tab__content--amin .tab-bot__btn', 0.8, { x: 0, opacity: 1 }, '-= .2');
}

function ainimateResults(r) {
    r.staggerTo('.result-photo__item', 0.8, { y: 0, opacity: 1 }, 0.3).staggerTo('.results-anim-block', 0.8, { y: 0, opacity: 1 }, 0.5, '-=1.5');
}

function ainimateVideo(v) {
    v.to('.video__title', 0.8, { ease: Expo.easeOut, y: 0, opacity: 1 }).staggerTo('.bals__item', 0.8, { ease: Expo.easeOut, y: 0, zIndex: 1 }, 0.5).to('.bals__item--2', 1, { x: 1, y: 1 }, '-=1').to('.bals__item--3', 1, { x: 50, y: 10 }, '-=1').to('.video__desc', 0.5, { x: 1, y: 1, opacity: 1 }, '-=.5').to('.video__player', 0.8, { scale: 1, opacity: 1 }, '-=1.5').to('.video__play', 1, {
        ease: Elastic.easeOut.config(1, 0.3),
        scale: 1,
        opacity: 1
    }, '-=1').to('.video__btn', 0.9, { y: 0, opacity: 1 }, '-=.3');
}

function ainimateCounter(c) {
    c.to('.counter-user', 0.8, { y: 0, x: '-50%', opacity: 1 }).to('.counter__desc', 0.8, { y: 0, opacity: 1 }, '-=.7');
}

function ainimatePrice(p) {
    p.to('.price__title', 0.8, { y: 0, opacity: 1 }).to('.price__desc', 0.8, { y: 0, opacity: 1 }, '-=.3').staggerTo('.price__item', 0.5, {
        x: 0,
        opacity: 1
    }, 0.5, '-=.5').to('.price__item', 0.5, {
        onComplete: function onComplete() {
            $('.price__item').css('transition', '.35s');
        }
    });
}

$(function () {
    $('body').removeClass('loading');

    if ($(window).width() > 1024 && $(window).height() <= 1080) {
        sectionAnimate();
    }

    function heroHeight() {
        if ($(window).height() > 1080) {
            if ($(window).width() > 1024) {
                $('.hero').css({
                    minHeight: 100 + '%'
                });
            } else {
                $('.hero').css({
                    minHeight: 100 + '%',
                    paddingTop: 120 + 'px'
                });
            }
        }
    }
    heroHeight();
    $(window).resize(heroHeight());

    $('.js-tabs').each(function () {
        var $tab = $(this).find('.tab__title');
        var $content = $(this).find('.tab__content');
        var $btnPrev = $(this).find('.tab__btn--prev');
        var $btnNext = $(this).find('.tab__btn--next');
        var i = 0;

        if ($(window).width() >= 480) {
            $content.not(':first').hide();

            $tab.on('click', function () {
                $tab.removeClass('is-active').eq($(this).index()).addClass('is-active');
                $content.hide().eq($(this).index()).fadeIn();
            }).eq(0).addClass('is-active');
        } else {
            var prev = function prev() {
                $tab.hide();
                $content.hide();
                i--;
                if (i < 0) {
                    i = $tab.length - 1;
                }
                $tab.eq(i).fadeIn();
                $content.eq(i).fadeIn();
            };

            var next = function next() {
                $tab.hide();
                $content.hide();
                i++;
                if (i >= $tab.length) {
                    i = 0;
                }
                $tab.eq(i).fadeIn();
                $content.eq(i).fadeIn();
            };

            $content.not(':first').hide();
            $tab.not(':first').hide();

            $btnPrev.on('click', prev);

            $btnNext.on('click', next);
        }
    });

    $('.menu li').on('click', function () {
        // $('.menu li').removeClass('is-active');
        // $(this).addClass('is-active');
        $('.wrapper').removeClass('menu-open');
        $('.js-hamburger').removeClass('on');
    });

    //Hamburger
    $('.js-hamburger').on('click', function (e) {
        if ($(this).hasClass('on')) {
            $(this).removeClass('on');
            $('.wrapper').removeClass('menu-open');
        } else {
            $(this).addClass('on');
            $('.wrapper').addClass('menu-open');
        }
        if ($('.hero').find('.slick-slide').length) {
            var img = $('.hero').find('.slick-slide.slick-active').find('picture source').attr('srcset');
            $('.js-menu').find('.menu__list').css('background-image', 'url(' + img + ')');
        } else {
            var _img = $('.hero').find('picture source').attr('srcset');
            $('.js-menu').find('.menu__list').css('background-image', 'url(' + _img + ')');
        }
        e.preventDefault();
    });

    //Slider
    $('.js-slider').each(function () {
        var $slids = $(this).find('.slider__slides');
        var $slide = $(this).find('.slider__slide');

        if ($slide.length > 1) {
            $slids.not('.slick-initialized').slick({
                autoplay: true,
                autoplaySpeed: 3000,
                speed: 1500,
                slidesToShow: 1,
                slidesToScroll: 1,
                infinite: true,
                arrows: false,
                dots: false,
                fade: true,
                cssEase: 'cubic-bezier(0.7, 0, 0.3, 1)',
                responsive: [{
                    breakpoint: 480,
                    settings: {
                        fade: false
                    }
                }]
            });
        }
    });

    if ($(window).width() > 480) {
        $('.js-line').each(function () {
            $('<li>').addClass('line').appendTo($(this));

            var $li = $(this).find('li');

            var $line = $(this).find('.line');

            $li.each(function () {
                if ($(this).hasClass('is-active')) {
                    var width = $(this).width();
                    var howFar = $(this).position().left;
                    $line.css({
                        left: howFar + 'px',
                        width: width
                    });
                }
            });

            $li.on('click', function () {
                if ($(this).hasClass('line')) {
                    return;
                }

                var width = $(this).width();
                var howFar = $(this).position().left;

                $line.css({
                    left: howFar + 'px',
                    width: width
                });
            });
        });
    }

    //Window on scroll header fix
    $(window).scroll(function () {
        var scroll = $(this).scrollTop();
        if (scroll > 0) {
            $('.header').addClass('is-fixed');
        } else {
            var $menuItem = $('.js-menu').find('.menu__item');
            $('.header').removeClass('is-fixed');
            $menuItem.removeClass('is-active');
        }

        if (scroll > $(window).height()) {
            $('.js-go-top').addClass('is-visible');
        } else {
            $('.js-go-top').removeClass('is-visible');
        }
    });

    //Btn pulse
    $('.js-btn-pulse').on('mousedown', function () {
        var _this = this;

        $(this).addClass('is-clicked');
        setTimeout(function () {
            $(_this).removeClass('is-clicked');
        }, 1000);
    });

    //Scroll To
    $('.js-goto').on('click', function (e) {
        e.preventDefault();

        var offset = void 0;
        if ($(window).width() > 480) {
            offset = 50;
        } else {
            offset = 70;
        }
        var el = $(this).attr('href');
        var destination = $(el).offset().top;
        $('html, body').animate({ scrollTop: destination - offset + 'px' }, 400);
    });

    $('.js-go-next').on('click', function (e) {
        var target = $(this).closest('section').next('section').offset().top;

        var offset = void 0;
        if ($(window).width() > 480) {
            offset = 50;
        } else {
            offset = 70;
        }
        $('html, body').animate({ scrollTop: target - offset }, 'slow');
        e.preventDefault();
    });

    var scrollspyOffset = void 0;
    if ($(window).height() <= 1080) {
        scrollspyOffset = -100;
    } else {
        scrollspyOffset = -400;
    }
    if ($(window).width() >= 480) {
        $('.js-scrollspy').scrollspy({ offset: scrollspyOffset });
    }

    $('.js-go-top').on('click', function (e) {
        e.preventDefault();
        $('html, body').animate({ scrollTop: 0 }, 800);
    });

    if ($('.js-input').length) {
        $('.js-input').find('input').on('focus', function () {
            $(this).parent('.js-input').addClass('is-focus');
        }).on('blur', function () {
            if ($(this).val() === '') {
                $(this).parent('.js-input').removeClass('is-focus');
            }
        });
    }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
